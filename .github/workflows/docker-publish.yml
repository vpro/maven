---
name: Docker

on:
  push:
    branches: [ "main", "alpine" ]
    tags: [ '*' ]
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata for tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
      - name: Set tag suffix
        id: tag_suffix
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* && "${GITHUB_REF##*/}" == * ]]; then
            # Get branch name for the tag
            BRANCH=$(git branch -r --contains "${GITHUB_REF}" | grep 'origin/alpine' || true)
            if [[ -n "$BRANCH" ]]; then
              echo "suffix=-alpine" >> $GITHUB_OUTPUT
            else
              echo "suffix=" >> $GITHUB_OUTPUT
            fi
          else
            echo "suffix=" >> $GITHUB_OUTPUT
          fi
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}${{ steps.tag_suffix.outputs.suffix }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=This image is used in CI/CD to build projects with maven
